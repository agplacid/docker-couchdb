---
target: kubernetes/testing/local.yaml
---

{%- set vars = data['vars'] -%}

apiVersion: v1
kind: Secret
metadata:
  name: couchdb
  labels:
    app: couchdb
    test: 'true'
    environment: testing
type: Opaque
data:
  user: Y29sbGFib3JhdGU=
  pass: RVZCNklCQVhWMTlUWEtlQWZ4dWRUQkk0RVk3dzljaWk=
---
apiVersion: v1
kind: Secret
metadata:
  name: erlang
  labels:
    app: couchdb
    test: 'true'
    environment: testing
type: Opaque
data:
  cookie: WlgyZVA4Umo4cnVmUjVJbjNnWGV1akhYNllseEREbnRyd3ZROE5kcGd3OXFOQjZ5UFhPUWhxNFF4bEc0WnZaQQ==
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: couchdb
  labels:
    app: couchdb
    test: 'true'
    environment: testing
data:
  {{ file('../../includes/config-data.yaml.inc')|indent(2) }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: couchdb-templates
  labels:
    app: couchdb
    test: 'true'
    environment: testing
data:
  local.ini.j2: |
    {{ file('../../includes/local.ini.inc')|indent(4) }}

  vm.args.j2: |
    {{ file('../../includes/vm.args.inc')|indent(4) }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: couchdb-healthz
data:
  liveness.yaml: |
    {{ file('../../includes/goss_wait.yaml.inc')|indent(4) }}
  readiness.yaml: |
    {{ file('../../includes/goss_wait.yaml.inc')|indent(4) }}
---
kind: Service
apiVersion: v1
metadata:
  name: couchdb
  labels:
    app: couchdb
    test: 'true'
    environment: testing
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: 'true'
spec:
  clusterIP: None
  selector:
    app: couchdb
  ports:
  - name: data
    port: 5984
  - name: admin
    port: 5986
---
apiVersion: v1
kind: Service
metadata:
  name: couchdb-lb
  labels:
    app: couchdb
    test: 'true'
    environment: testing
spec:
  selector:
    app: couchdb
  ports:
  - name: data
    port: 5984
  - name: admin
    port: 5986
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: couchdb
  labels:
    app: couchdb
    test: 'true'
    environment: testing
spec:
  serviceName: couchdb
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: couchdb
        test: 'true'
        environment: testing
    spec:
      terminationGracePeriodSeconds: 0
      initContainers:
      - name: config
        image: {{ vars['images']['tmpld'] }}
        imagePullPolicy: IfNotPresent
        args:
        - tmpld /templates/*.j2
        volumeMounts:
        - name: templates
          mountPath: /templates
        - name: config
          mountPath: /config
      containers:
      - name: couchdb
        image: {{ vars['images']['couchdb'] }}
        imagePullPolicy: IfNotPresent
        env:
        - name: ERLANG_HOSTNAME
          valueFrom:
            configMapKeyRef:
              name: couchdb
              key: erlang.hostname
        - name: COUCHDB_ADMIN_USER
          valueFrom:
            secretKeyRef:
              name: couchdb
              key: user
        - name: COUCHDB_ADMIN_PASS
          valueFrom:
            secretKeyRef:
              name: couchdb
              key: pass
        - name: ERLANG_COOKIE
          valueFrom:
            secretKeyRef:
              name: erlang
              key: cookie
        ports:
        - name: data
          containerPort: 5984
        - name: admin
          containerPort: 5986
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 5
          timeoutSeconds: 2
          successThreshold: 1
          failureThreshold: 5
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          timeoutSeconds: 2
          successThreshold: 1
          failureThreshold: 5
      - name: healthz-ready
        image: {{ vars['images']['goss'] }}
        imagePullPolicy: IfNotPresent
        command:
        - healthz
        ports:
        - name: healthz-ready
          containerPort: 8080
        volumeMounts:
        - name: healthz
          mountPath: /goss
      - name: healthz-live
        image: {{ vars['images']['goss'] }}
        imagePullPolicy: IfNotPresent
        command:
        - healthz
        - liveness
        ports:
        - name: healthz-live
          containerPort: 8081
        volumeMounts:
        - name: healthz
          mountPath: /goss
      - name: couchdiscover
        image: {{ vars['images']['couchdiscover'] }}
        imagePullPolicy: IfNotPresent
        env:
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: couchdb
              key: couchdiscover.log.level
      volumes:
      - name: templates
        configMap:
          name: couchdb-templates
      - name: config
        emptyDir: {}
      - name: healthz
        configMap:
          name: couchdb-healthz
      restartPolicy: Always
